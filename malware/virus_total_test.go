package malware

import (
	"github.com/joho/godotenv"
	"github.com/simplycubed/vulnscan/utils"
	"os"
	"testing"
)

func TestVirusTotalClient(t *testing.T) {
	mainFolder, _ := utils.FindMainFolder()
	err := godotenv.Load(mainFolder + string(os.PathSeparator) + ".env")
	if err != nil {
		t.Error("Error loading .env file")
	}
	apiKey := os.Getenv("VIRUS_TOTAL_API_KEY")
	if len(apiKey) == 0 {
		t.Error("Error loading VIRUS_TOTAL_API_KEY from .env file")
	}
	client, err := NewVirusTotalClient(apiKey)
	if err != nil {
		t.Error(err)
	}
	p, _ := utils.FindTest("apps", "binary.ipa")
	r, e := client.makeApiRequest("POST", "file/scan", map[string]string{"file": p})
	if e != nil {
		t.Errorf("%s", e)
	} else if msg:= r["verbose_msg"]; msg != "Scan request successfully queued, come back later for the report" {
		t.Errorf("Wrong api response: %s", msg)
	}
	hash, _ := utils.HashMD5(p)
	r, e = client.makeApiRequest("GET", "file/report", map[string]string{"resource": hash})
	if e != nil {
		t.Errorf("%s", e)
	} else if msg:= r["verbose_msg"]; msg != "Scan finished, information embedded" {
		t.Errorf("Wrong api response: %s", msg)
	}
}


